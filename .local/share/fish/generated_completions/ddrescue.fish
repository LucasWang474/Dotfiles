# ddrescue
# Autogenerated from man page /usr/share/man/man1/ddrescue.1.gz
complete -c ddrescue -s h -l help -d 'display this help and exit'
complete -c ddrescue -s V -l version -d 'output version information and exit'
complete -c ddrescue -s a -l min-read-rate -d 'minimum read rate of good areas in bytes/s'
complete -c ddrescue -s A -l try-again -d 'mark non-trimmed, non-scraped as non-tried'
complete -c ddrescue -s b -l sector-size -d 'sector size of input device [default 512]'
complete -c ddrescue -s B -l binary-prefixes -d 'show binary multipliers in numbers [SI]'
complete -c ddrescue -s c -l cluster-size -d 'sectors to copy at a time [128]'
complete -c ddrescue -s C -l complete-only -d 'don\'t read new data beyond mapfile limits'
complete -c ddrescue -s d -l idirect -d 'use direct disc access for input file'
complete -c ddrescue -s D -l odirect -d 'use direct disc access for output file'
complete -c ddrescue -s e -l max-bad-areas -d 'maximum number of [new] bad areas allowed'
complete -c ddrescue -s E -l max-error-rate -d 'maximum allowed rate of read errors per second'
complete -c ddrescue -s f -l force -d 'overwrite output device or partition'
complete -c ddrescue -s F -l fill-mode -d 'fill blocks of given types with data (?*/-+l)'
complete -c ddrescue -s G -l generate-mode -d 'generate approximate mapfile from partial copy'
complete -c ddrescue -s H -l test-mode -d 'set map of good/bad blocks from given mapfile'
complete -c ddrescue -s i -l input-position -d 'starting position of domain in input file [0]'
complete -c ddrescue -s I -l verify-input-size -d 'verify input file size with size in mapfile'
complete -c ddrescue -s J -l verify-on-error -d 'reread latest good sector after every error'
complete -c ddrescue -s K -l skip-size -d 'initial,maximum size to skip on read error'
complete -c ddrescue -s L -l loose-domain -d 'accept an incomplete domain mapfile'
complete -c ddrescue -s m -l domain-mapfile -d 'restrict domain to finished blocks in <file>'
complete -c ddrescue -s M -l retrim -d 'mark all failed blocks as non-trimmed'
complete -c ddrescue -s n -l no-scrape -d 'skip the scraping phase'
complete -c ddrescue -s N -l no-trim -d 'skip the trimming phase'
complete -c ddrescue -s o -l output-position -d 'starting position in output file [ipos]'
complete -c ddrescue -s O -l reopen-on-error -d 'reopen input file after every read error'
complete -c ddrescue -s p -l preallocate -d 'preallocate space on disc for output file'
complete -c ddrescue -s P -l data-preview -d 'show some lines of the latest data read [3]'
complete -c ddrescue -s q -l quiet -d 'suppress all messages'
complete -c ddrescue -s r -l retry-passes -d 'exit after <n> retry passes (-1=\\,infinity\\/) [0]'
complete -c ddrescue -s R -l reverse -d 'reverse the direction of all passes'
complete -c ddrescue -s s -l size -d 'maximum size of input data to be copied'
complete -c ddrescue -s S -l sparse -d 'use sparse writes for output file'
complete -c ddrescue -s t -l truncate -d 'truncate output file to zero size'
complete -c ddrescue -s T -l timeout -d 'maximum time since last successful read'
complete -c ddrescue -s u -l unidirectional -d 'run all passes in the same direction'
complete -c ddrescue -s v -l verbose -d 'be verbose (a 2nd -v gives more)'
complete -c ddrescue -s w -l ignore-write-errors -d 'make fill mode ignore write errors'
complete -c ddrescue -s x -l extend-outfile -d 'extend outfile size to be at least this long'
complete -c ddrescue -s X -l max-read-errors -d 'maximum number of read errors allowed'
complete -c ddrescue -s y -l synchronous -d 'use synchronous writes for output file'
complete -c ddrescue -s Z -l max-read-rate -d 'maximum read rate in bytes/s'
complete -c ddrescue -l ask -d 'ask for confirmation before starting the copy'
complete -c ddrescue -l command-mode -d 'execute commands from standard input'
complete -c ddrescue -l cpass -d 'select what copying pass(es) to run'
complete -c ddrescue -l delay-slow -d 'initial delay before checking slow reads [30]'
complete -c ddrescue -l log-events -d 'log significant events in <file>'
complete -c ddrescue -l log-rates -d 'log rates and error sizes in <file>'
complete -c ddrescue -l log-reads -d 'log all read operations in <file>'
complete -c ddrescue -l mapfile-interval -d 'save/sync mapfile at given interval [auto]'
complete -c ddrescue -l max-slow-reads -d 'maximum number of slow reads allowed'
complete -c ddrescue -l pause-on-error -d 'time to wait after each read error [0]'
complete -c ddrescue -l pause-on-pass -d 'time to wait between passes [0]'
complete -c ddrescue -l reset-slow -d 'reset slow reads if rate rises above min'
complete -c ddrescue -l same-file -d 'allow infile and outfile to be the same file'

